<div id="MyGrid">
    <FluentDataGrid Items="@GridData" Pagination="@pagination">
    <PropertyColumn Property="@(p => p.SaleType)" Sortable="true" />
    <PropertyColumn Property="@(p => $"{p.TypeId.Replace("MyObjectBuilder_", "")}")" Filtered="!string.IsNullOrWhiteSpace(typeFilter)" Title="Type Id" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <FluentSearch Autofocus=true @bind-Value=typeFilter @oninput="HandleTypeFilter" @bind-Value:after="HandleClear" Placeholder="Type Id" Style="width: 100%;" Label="Filter" />
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="@(p => $"{p.SubTypeId}")" Title="Subtype" Filtered="!string.IsNullOrWhiteSpace(subTypeFilter)" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <FluentSearch Autofocus=true @bind-Value=subTypeFilter @oninput="HandleSubTypeFilter" @bind-Value:after="HandleSubtypeClear" Placeholder="Subtype Id" Style="width: 100%;" Label="Filter" />
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="@(p => p.Price)" Sortable="true" />
    <PropertyColumn Property="@(p => p.Amount)" Sortable="true" />
    <PropertyColumn Property="@(p => p.GridName)" Title="Grid Name" Sortable="true" />
    <PropertyColumn Property="@(p => p.KeenStationId)" Title="Grid Name" Sortable="true" />
</FluentDataGrid>
    <FluentPaginator State="@pagination" CurrentPageIndexChanged="Changed"/>
</div>
@code {
    private string GetClassForTypeId(string typeId)
    {
        // Example: Apply a specific class based on the TypeId value
        if (typeId.Contains("Special"))
            return "special-type";
        else if (typeId.StartsWith("TypeA"))
            return "type-a";
        else
            return "default-type";
    }
}
<style>

    .Component {
        color: gray;
        font-style: italic;
    }

    .ConsumableItem {
        color: red;
        font-style: italic;
    }
</style>